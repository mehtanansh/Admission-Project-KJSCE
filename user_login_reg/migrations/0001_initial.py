# Generated by Django 2.2.5 on 2020-01-26 05:31

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_student', models.BooleanField(default=False, verbose_name='student status')),
                ('is_teacher', models.BooleanField(default=False, verbose_name='teacher status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('applId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('DOB', models.DateField(default=None, null=True)),
                ('mobile', models.CharField(default='', max_length=10)),
                ('gender', models.CharField(default='', max_length=6)),
                ('parent_guardianName', models.CharField(default='', max_length=20)),
                ('parent_guardianEmail', models.EmailField(default='', max_length=254)),
                ('parent_guardianMobile', models.CharField(default='', max_length=10)),
                ('father_occ', models.CharField(default='', max_length=10)),
                ('mother_occ', models.CharField(default='', max_length=10)),
                ('family_ann_inc', models.CharField(default='', max_length=20)),
                ('relation', models.CharField(default='', max_length=10)),
                ('pwd', models.BooleanField(default=False)),
                ('mother_tongue', models.CharField(default='', max_length=15)),
                ('defence_type', models.CharField(default='', max_length=15)),
                ('religion', models.CharField(default='', max_length=15)),
                ('addr_line_1', models.TextField()),
                ('state', models.CharField(default='', max_length=10)),
                ('country', models.CharField(default='India', max_length=10)),
                ('district', models.CharField(default='', max_length=10)),
                ('pincode', models.CharField(default='', max_length=10)),
                ('nationality', models.CharField(default='Indian', max_length=10)),
                ('ssc_aggregate_marks', models.DecimalField(decimal_places=2, default=None, max_digits=5, null=True)),
                ('ssc_marks_out_of', models.DecimalField(decimal_places=2, default=None, max_digits=5, null=True)),
                ('ssc_year', models.CharField(default='', max_length=10)),
                ('ssc_board', models.CharField(default='', max_length=10)),
                ('hsc_aggregate_marks', models.DecimalField(decimal_places=2, default=None, max_digits=5, null=True)),
                ('hsc_marks_out_of', models.DecimalField(decimal_places=2, default=None, max_digits=5, null=True)),
                ('hsc_physics_marks', models.DecimalField(decimal_places=2, default=None, max_digits=5, null=True)),
                ('hsc_math_marks', models.DecimalField(decimal_places=2, default=None, max_digits=5, null=True)),
                ('hsc_chemistry_marks', models.DecimalField(decimal_places=2, default=None, max_digits=5, null=True)),
                ('hsc_year', models.CharField(default='', max_length=10)),
                ('hsc_board', models.CharField(default='', max_length=10)),
                ('SET', models.IntegerField(default=None, null=True)),
                ('cet', models.IntegerField(default=None, null=True)),
                ('cet_maths', models.IntegerField(default=None, null=True)),
                ('cet_physics', models.IntegerField(default=None, null=True)),
                ('cet_chemistry', models.IntegerField(default=None, null=True)),
                ('jee_mains', models.IntegerField(default=None, null=True)),
                ('jee_adv', models.IntegerField(default=None, null=True)),
                ('candidate_photo', models.ImageField(default=None, upload_to='')),
                ('signature', models.ImageField(default=None, upload_to='')),
                ('ssc_result', models.ImageField(default=None, upload_to='')),
                ('hsc_result', models.ImageField(default=None, upload_to='')),
                ('hsc_LC', models.ImageField(default=None, upload_to='')),
                ('cet_result', models.ImageField(default=None, upload_to='')),
                ('jee_mains_result', models.ImageField(default=None, upload_to='')),
                ('jee_adv_result', models.ImageField(default=None, upload_to='')),
                ('set_result', models.ImageField(default=None, upload_to='')),
                ('minority_proof', models.ImageField(default=None, upload_to='')),
                ('nationality_proof', models.ImageField(default=None, upload_to='')),
                ('tfws_proof', models.ImageField(default=None, upload_to='')),
                ('maharashtra_citizen_proof', models.ImageField(default=None, upload_to='')),
                ('address_proof', models.ImageField(default=None, upload_to='')),
                ('ssc_marksheet_verified', models.BooleanField(default=False)),
                ('hsc_marksheet_verified', models.BooleanField(default=False)),
                ('cet_marksheet_verified', models.BooleanField(default=False)),
                ('jee_mains_markssheet_verified', models.BooleanField(default=False)),
                ('jee_adv_markssheet_verified', models.BooleanField(default=False)),
                ('signature_verified', models.BooleanField(default=False)),
                ('candidate_photo_verified', models.BooleanField(default=False)),
                ('all_verified', models.BooleanField(default=False)),
            ],
        ),
    ]
